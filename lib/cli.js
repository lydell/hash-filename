// Generated by CoffeeScript 1.6.3
/*
Copyright 2013 Simon Lydell

This file is part of hash-filename.

hash-filename is free software: you can redistribute it and/or modify it under the terms of the GNU
General Public License as published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

hash-filename is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License along with hash-filename. If not,
see <http://www.gnu.org/licenses/>.
*/

var asyncEach, copy, createObject, hash, insertAfterFilename, path, program, ucurry, __, _ref;

path = require("path");

program = require("commander");

ucurry = require("ucurry");

asyncEach = require("async-each");

_ref = require("./helpers"), copy = _ref.copy, hash = _ref.hash, insertAfterFilename = _ref.insertAfterFilename, createObject = _ref.createObject;

__ = void 0;

module.exports = function(process) {
  var newFileFn;
  program.version(require("../package").version).usage("[options] <files>").option("-a, --algorithm <name>", "Hash algorithm [sha1]", "sha1").option("-l, --length <n>", "Hash length [11]", parseInt, 11);
  program.on("--help", function() {
    return console.log("Copies the given files with a hash of their contents put into to their filenames.\nWrites a JSON map of original filenames to hashed filenames to stdout.");
  });
  program.parse(process.argv);
  if (program.args.length === 0) {
    program.help();
  }
  newFileFn = function(file, contents) {
    return insertAfterFilename(file, hash(contents, program));
  };
  return asyncEach(program.args, ucurry(copy, __, newFileFn, __), function(error, newFiles) {
    var map;
    if (error) {
      process.stderr.write(error.toString() + "\n");
      return process.exit(1);
    } else {
      map = createObject(program.args, newFiles, path.basename);
      process.stdout.write(JSON.stringify(map, null, 2) + "\n");
      return process.exit(0);
    }
  });
};
